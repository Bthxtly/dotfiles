# See https://wiki.hyprland.org/Configuring/Keywords/

$mainMod = SUPER # Sets "Windows" key as main modifier
$scriptsDir = /home/bthxtly/.config/hypr/scripts

bind = $mainMod SHIFT, R, exec, hyprctl reload

# launcher
# bind = $mainMod, S, global, quickshell:launcher
# bind = $mainMod, S, exec, pidof qs || killall rofi || rofi -show run # toggle rofi
bind = $mainMod, S, exec, killall rofi || rofi -show drun # toggle rofi

# apps {{{
bind = $mainMod, Q, exec, kitty
bind = $mainMod, T, exec, zen
bind = $mainMod, D, exec, neovide
bind = $mainMod, Z, exec, zathura
bind = $mainMod SHIFT, T, exec, killall zen && zen
bind = $mainMod, B, exec, pidof qs || killall -SIGUSR1 waybar || waybar # toggle waybar
bind = $mainMod, E, exec, kitten quick-access-terminal --config ~/dotfiles/kitty/.config/kitty/quick_access_terminal.conf # quick terminal
# }}}

# window actions {{{
bind = $mainMod, C, killactive,
bind = $mainMod, P, pin
bind = $mainMod, V, togglefloating,
bind = $mainMod, G, togglegroup,
bind = $mainMod SHIFT, G, exec, hyprctl dispatcher lockactivegroup toggle
bind = $mainMod CTRL, G, exec, hyprctl dispatcher lockgroups toggle
bind = $mainMod, R, changegroupactive
bind = $mainMod SHIFT, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle
# fullscreen
bind = $mainMod SHIFT, F, fullscreen, # fullscreen the active window
bind = $mainMod, F, fullscreenstate, 1, 3 # set fullscreen status for the active window
bind = $mainMod, W, fullscreenstate, 0, 3 # set fullscreen status for the active window

# hyprexpo
bind = $mainMod, O, hyprexpo:expo, toggle # can be: toggle, off/disable or on/enable
bind = $mainMod, apostrophe, hyprexpo:expo, toggle # can be: toggle, off/disable or on/enable

# exit
bindl = $mainMod, Delete, exit,         # mod + delete to close hyprland

# Move focus with mainMod + arrow keys
bind = $mainMod, left,  movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up,    movefocus, u
bind = $mainMod, down,  movefocus, d

# Move focus between tiled and floating windows
bind = $mainMod, space, exec, $(hyprctl activewindow -j | jq '.floating') && hyprctl dispatch cyclenext tiled || hyprctl dispatch cyclenext floating

# Move windows with mainMod + Shift + arrow keys
bind = $mainMod SHIFT, left,  movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up,    movewindow, u
bind = $mainMod SHIFT, down,  movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Resize the active window
binde = $mainMod CTRL, right, resizeactive, 10 0
binde = $mainMod CTRL, left,  resizeactive, -10 0
binde = $mainMod CTRL, up,    resizeactive, 0 -10
binde = $mainMod CTRL, down,  resizeactive, 0 10

# Special workspace (scratchpad)
bind = $mainMod, H, togglespecialworkspace, misc
bind = $mainMod SHIFT, H, movetoworkspace, special:misc
bind = $mainMod, N, togglespecialworkspace, pwvu
bind = $mainMod SHIFT, N, movetoworkspace, special:pwvu
bind = $mainMod, I, togglespecialworkspace, translation
bind = $mainMod SHIFT, I, movetoworkspace, special:translation

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up,   workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bindm = $mainMod, ALT_L, resizewindow
# }}}

# media and brightness {{{
# bindel =, xf86audioraisevolume, exec, $scriptsDir/Volume.sh --inc #volume up
# bindel =, xf86audiolowervolume, exec, $scriptsDir/Volume.sh --dec #volume down
# bindel =, XF86AudioMute,        exec, $scriptsDir/Volume.sh --toggle # toggle mute
# bindel =, XF86AudioMicMute,     exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel =, xf86audioraisevolume, exec, pamixer -i 5 # volume up
bindel =, xf86audiolowervolume, exec, pamixer -d 5 # volume down
bindel =, XF86AudioMute,        exec, pamixer -t   # toggle mute

# media controls using keyboards
# Requires playerctl
bindl =, XF86AudioNext,  exec, playerctl next
bindl =, XF86AudioPause, exec, playerctl play-pause
bindl =, XF86AudioPlay,  exec, playerctl play-pause
bindl =, XF86AudioPrev,  exec, playerctl previous

# Sreen brightness controls
# bindel =, XF86MonBrightnessUp,   exec, $scriptsDir/BrightnessKbd.sh --inc #Keyboard brightness Down
# bindel =, XF86MonBrightnessDown, exec, $scriptsDir/BrightnessKbd.sh --dec #Keyboard brightness up
bindel =, XF86MonBrightnessUp,   exec, hyprctl dispatch global quickshell:brightnessUp
bindel =, XF86MonBrightnessDown, exec, hyprctl dispatch global quickshell:brightnessDown
# }}}

# miscellaneous {{{
# Screenshots
bindl =      , Print, exec, hyprshot -m output
bindl = SHIFT, Print, exec, hyprshot -m window
bindl = CTRL , Print, exec, hyprshot -m region

# Screen records
bindl =     , XF86Launch2, exec, $scriptsDir/screen-recorder.sh
bindl = CTRL, XF86Launch2, exec, $scriptsDir/screen-recorder.sh --region

# Pick color on the screen
bindl = $mainMod SHIFT, K, exec, hyprpicker -f rgb

# Change wallpapers
bind = $mainMod SHIFT, W, exec, killall rofi || $scriptsDir/wallpaper_launcher.sh

# Switch theme
bind = $mainMod, M, exec, $scriptsDir/switcher.sh # switch between light and dark mode

# switch monitors manully
bind = $mainMod SHIFT, M, exec, $scriptsDir/monitor-toggle.sh

# toggle hypridle manully
bind = $mainMod SHIFT, E, exec, $scriptsDir/hypridle-toggle.sh

# lock, suspend
bind = $mainMod SHIFT, L, exec, hyprlock
bindl =$mainMod ALT_L, L, global, quickshell:lock

# turn off screen
bindl = $mainMod SHIFT, D, dpms, off
# }}}


# Testing
bindel = Super+Alt, f12, exec, notify-send -u low -i dialog-information-symbolic 'Test notification' "Here's a really long message to test truncation and wrapping\nYou can middle click or flick this notification to dismiss it!" -a 'Shell' -A "Test1=I got it!" -A "Test2=Another action"

# vim:foldmethod=marker:foldlevel=0
